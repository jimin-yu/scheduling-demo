<h1>calendar</h1>
<div id='calendar'></div>
<%= render "edit_event" %>
<%= render "add_event" %>

<% content_for :stylesheet do %>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/fullcalendar@5.10.2/main.min.css">
    <style>
        .fc-daygrid-dot-event {
            padding: 10px 10px;
        }
    </style>
<% end %>

<% content_for :javascript do %>
    <script src="https://cdn.jsdelivr.net/npm/fullcalendar@5.10.2/main.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/fullcalendar@5.10.2/locales-all.min.js"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            var calendarEl = document.getElementById('calendar');
            var calendar = new FullCalendar.Calendar(calendarEl, {
                timeZone: 'local',
                locale: 'kr',
                initialView: 'dayGridMonth',
                headerToolbar: {
                    center: 'addEventButton'
                },
                customButtons: {
                    addEventButton: {
                        text: '스케줄 추가',
                        click: () => $('#addEventModal').modal('show')
                    }
                },
                events: async function(info, successCallback, failureCallback) {
                    let start = info.start.valueOf();
                    let end = info.end.valueOf();
                    successCallback(await get_all_events(start, end))
                },
                eventClick: function(info) {
                    get_event(info.event.start)
                    $('#editEventModal').modal('show');
                }
            });
            calendar.render();
        });

        function get_all_events(start, end){
            return new Promise((resolve, reject) => {
                $.ajax({
                    type: "GET",
                    url: '/schedule/events', 
                    data: {start_date: start, end_date: end},
                    success: function(result){
                        event_array = result.data.map(function(event){
                            return {
                                start: `${event.date}T${event.time||'22:00'}:00`,
                                allDay: false,
                                color: event.enabled ? 'blue' : 'red'
                            }
                        })
                        resolve(event_array);
                    },
                    error: function(error){
                        reject(error);
                    }
                })
            });
        }

        function get_event(start){
            let date = strftime(start);
            $('#editEventModal #date').text(date);
            $.ajax({
                type: "GET",
                url: `/schedule/${date}`, 
                success: function(result){
                    $("#editEventModal #enabled").prop("checked", result.data.enabled);
                    $("#editEventModal #time").val(result.data.time);
                }
            })
        }

        function create_or_edit_event(date, params){
            $.ajax({
                type: "PUT",
                url: `/schedule/${date}`, 
                data: params,
                success: function(result){
                    location.reload();
                }
            })
        }

        function strftime(time){
            //yyyy-mm-dd format
            return time.toISOString().split('T')[0];
        }

    </script>
<% end %>å